<script>
$(function(){
    var modalInstance;

    $('#canvas').bubblify(<%= raw @raw_bubbles_data %>,<%= raw @bubbles_parameters %>,prettifyBubbles);

    function prettifyBubbles(canvas){
        canvas.find('.connectionBubble').each(function(){

            // 1) expiration progress bar
            $(this).parent('.connectBubbleContainer').circleProgress({
                value: 0.75,
                thickness:5,
                lineCap:'round',
                size: $(this).parent('.connectBubbleContainer').width(),
                fill: {color: '#ed1c24'},
                emptyFill: 'rgba(0,0,0,0)'
            });
            // 2) Notification icons
            var coordinates = getNotificationCoordinate(315,$(this).parent('.connectBubbleContainer').width()/2,14);
            $(this).parent('.connectBubbleContainer').append('<span class="badge badge-yellow" style="width:28px; height:28px; position:absolute;left:'+coordinates.x+'px;bottom:'+coordinates.y+'px;font-size:15px;padding-top:4px;">1d</span>');

            // 3) Dialog on clicking each bubble
            
            $(this).off("click").on("click",function(){
                var formData = new FormData();                
                var _this = $(this);
                $('.bubbleModalView').each(function(){
                    if ($(this).prop('id') != 'plans') {$(this).removeClass('hidden').addClass('hidden')}
                        else {$(this).removeClass('hidden')};
                });
                $('[data-remodal-id=bubbleModal]').data("connection-id",_this.data('connection-id'));
                $('.bubbleModalView#makePlan input[name=connection_id]').val(_this.data('connection-id'));
                $('.bubbleModalView#makePlan input[name=connection_email]').prop('placeholder',"Type "+_this.data("first-name")+"'s email");

                    modalInstance = $('[data-remodal-id=bubbleModal]').remodal({
                    closeOnConfirm:false,
                    modifier:'bubbleModal'
                });
                $('.bubbleModalView#editConnection .modalBottomRightButton').off('click').on('click',function(){
                    formData.append("connection_id",_this.data('connection-id'));
                    formData.append("photo", $('.bubbleModalView#editConnection #photoUploader').prop("files")[0]);
                  $.ajax({
                    url: '<%= update_connection_path %>',
                    type: 'PUT',
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'JSON'
                  }).done(function(data){
                        if (data.status) {
                            $(".bubbleModalView#editConnection #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                            setTimeout(function(){
                                modalInstance.close();
                            },2000)
                        } else {
                            $(".bubbleModalView#editConnection #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                            
                        }
                      });
                })
                resetBubblesModal();
                modalInstance.open();

            });
        });
    }

    // Transitioning mechanism of different views within the bubble popup modal
    $('[data-remodal-id=bubbleModal] .transitionButton').off('click').on('click',function(){
        $($(this).data('current')).addClass('hidden');
        $($(this).data('target')).removeClass('hidden');
    });

    // Photo upload label within bubble modal to change display when a file is selected
    $(".bubbleModalView#editConnection #photoUploader").on("change",function(){
            $(".bubbleModalView#editConnection label[for=photoUploader]").html($(".bubbleModalView#editConnection #photoUploader").prop("files")[0].name);
    });

    // make plans
    $('.bubbleModalView#makePlan .modalBottomRightButton').off('click').on('click',function(){
      var form = $('.bubbleModalView#makePlan form');
      modalAjaxFormSubmission(form);
    })

    // reset the looks of the bubbles modal
    function resetBubblesModal(reset_values) {
        // Reset the height of the modal
        $('.remodal.bubbleModal').css("height","400px");
        // Reset the border color of fields. Except for checkboxes
        $('.remodal.bubbleModal').find('input').each(function(){
            if ($(this).prop('type') != "checkbox") {
                $(this).css("border","1px solid rgba(0,0,0,0.1)");    
            }
        });
        // Reset the fields that should be hidden by default
        $('.remodal.bubbleModal').find('.default_hidden').each(function(){
            $(this).removeClass('hidden').addClass('hidden');
        });
    }

    // General modal ajax submission function
    function modalAjaxFormSubmission(form) {
      $.ajax({
        url: form.prop('action'),
        type: form.prop('method'),
        data: form.serialize(),
        dataType: 'JSON'
      }).done(function(data){
            resetBubblesModal();
            if (data.status) {
                form.find('.alert').html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                    setTimeout(function(){
                        form.find('.alert').addClass('hidden');
                        form.children().each(function(){$(this).val("")});
                        modalInstance.close();
                    },2000)
            } else {
                form.find('.alert').html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
            }
            data.actions.forEach(function(actionObject){
                if(actionObject.action=="popup_refresh_main_on_close") {
                    var win = window.open(actionObject.url);
                var checkConnect = setInterval(function() {
                        if (!win || !win.closed) return;
                        clearInterval(checkConnect);
                        window.location.reload();
                    }, 100);                        
                } else if (actionObject.action=="unhide") {
                    $(actionObject.element).removeClass('hidden');
                } else if (actionObject.action == "change_css") {
                    $(actionObject.element).css(actionObject.css.attribute,actionObject.css.value);
                }
            });
          });
    }



    $('#addConnection').off('click').on('click',function(){
         vex.dialog.open({
            input: [
            '<div class="addConnectionPopupContent">',
                '<button class="btn" style="width:100%; margin-bottom:5px; background-color:#3b5998; color:white;">Import from Facebook</button>',
                '<br>',
                '<button class="btn btn-blue" style="width:100%; margin-bottom:10px; background-color:#0077b5; color:white;">Import from LinkedIn</button>',
                '<h2 style="width:100%;text-align:center;border-bottom:1px solid #E0E0E0;line-height:0.34em;margin:10px 0 20px;"><span style="font-size:13px;color:#787878;background-color:#f0f0f0;padding:0 19px;font-weight:bold;">Or enter manually</span></h2>',
                '<div class="vex-custom-field-wrapper">',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="name" type="text" placeholder="Name" required>',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="email" type="text" placeholder="Email">',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="phone" type="text" placeholder="Phone">',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="target_contact_interval_in_days" type="number" placeholder="How often to reach out? (days)" required>',
                    '</div>',
                '</div>',
                '<div class="alert hidden default_hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>',
            '</div>'
            ].join(''),
            buttons: [
                $.extend({}, vex.dialog.buttons.YES, { text: 'Add' }),
                $.extend({}, vex.dialog.buttons.NO, { text: 'Cancel' })
            ],            
            onSubmit: function(data){
                event.preventDefault();
                event.stopPropagation();
              $.ajax({
                url: '<%= create_connection_path %>',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({name:$('.addConnectionPopupContent input[name="name"]')[0].value,email:$('.addConnectionPopupContent input[name="email"]')[0].value,phone:$('.addConnectionPopupContent input[name="phone"]')[0].value,target_contact_interval_in_days:$('.addConnectionPopupContent input[name="target_contact_interval_in_days"]')[0].value}),
                dataType: 'JSON'
              }).done(function(data){
                if (data.status) {
                    $(".addConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                    setTimeout(function(){
                        $(".addConnectionPopupContent #connectionFormAlert").addClass('hidden');
                        $('.addConnectionPopupContent input[name="name"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="phone"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="email"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="target_contact_interval_in_days"]')[0].value = "";
                    },2000)
                } else {
                    $(".addConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                    
                }
              })
            }
        });
    })

    $('#navigation-tabs-container').easytabs({
        updateHash: false,
        tabs: "ul.etabs > li",
        animate: true,
        transitionIn: 'fadeIn',
        transitionOut: 'fadeOut',
        updateHash: true
    });


    function getNotificationCoordinate(angleInDegrees,attacheeRadiusInPixels,selfRadiusInPixels) {
        var x = Math.cos(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        var y = Math.sin(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        return {x:x,y:y};
    }

})
</script>
<div id="profile">
    <div id="logo">
        Sphere Beta
    </div>
    <div id="addConnection">
        Add
    </div>
    <div id="accountSettings">
        Settings
    </div>
</div>

<div id="navigation-tabs-container">
    <div class="topTabs-header clearfix">
        <ul class="etabs tabs" id="navigation">
            <li class="tab"><a href="#mySphere">MY SPHERE</a></li>
            <li class="tab"><a href="#challenges">CHALLENGES</a></li>
            <li class="tab"><a href="#progress">PROGRESS</a></li>
            <li class="tab"><a href="#achievements">ACHIEVEMENTS</a></li>
        </ul>        
    </div> 
    <div class="topTabsContent">
        <div id="mySphere">

            <div id="canvas" style="position: relative; margin: auto;"></div>            
            
        </div>
        <div id="challenges"></div>
        <div id="progress"></div>
        <div id="achievements"></div>
    </div>
</div>

<div data-remodal-id="bubbleModal">
  <button data-remodal-action="close" class="remodal-close"></button>
    <div class="bubbleModalView" id="plans">
        <div class="modalContentContainer">
            <div style="color:#656268; font-size:20px;">Shaun Bauer</div>
            <div style="color:#656268; margin-top: 15px; font-size:15px;font-weight:lighter">Last Hangout: Drinks 2 months ago</div>
            <div style="height:140px;margin-top:35px;" class="transitionButton" data-current="#plans" data-target="#editConnection">Icons</div>
            <div style="margin-top:22px;font-size:15px;color:#656268">No current plans :(</div>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereBlueBackground" data-current="#plans" data-target="#makePlan">Make Plans</div>
            <div class="modalBottomRightButton sphereRedBackground">Remind Me</div>
        </div>
    </div>
    <div class="bubbleModalView hidden" id="makePlan">
        <div class="modalContentContainer">
            <form action="<%= plans_path %>" method="POST" >
                <input type="date" class="input-text" name="date" placeholder="Which day"/>
                <input type="text" class="input-text" name="time" placeholder="What time (e.g. 12:30pm)" required />
                <input type="number" class="input-text" name="duration" placeholder="For how many hours (e.g. 0.5)" required />
                <input type="text" class="input-text" name="name" placeholder="Meeting/activity name" required />
                <input type="text" class="input-text" name="location" placeholder="Location (optional)" />
                <input type="text" class="input-text" name="details" placeholder="Details (optional)" />
                <input type="hidden" name="connection_id">
                <%= check_box_tag :notify,nil,checked:true %>
                <label for="notify">Send invite?</label>
                <input type="text" class="input-text hidden default_hidden" name="connection_email">
                <div class="alert hidden default_hidden" id="makePlanFormAlert" style="margin-top:1px;line-height:15px;"></div>
            </form>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereRedBackground" data-current="#makePlan" data-target="#plans">Back</div>
            <div class="modalBottomRightButton sphereBlueBackground">Put in Calendar</div>
        </div>
    </div>
    <div class="bubbleModalView hidden" id="editConnection">
        <div class="modalContentContainer">
            <form id="connectionInfo">
                <input name="photoUploader" id="photoUploader" type="file" accept="image/*">
                <label for="photoUploader">
                    Choose a display picture
                </label>
                <div class="alert hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>
            </form>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereRedBackground" data-current="#editConnection" data-target="#plans">Back</div>
            <div class="modalBottomRightButton sphereBlueBackground">Update</div>
        </div>
    </div>
</div>



<%= link_to 'Logout', logout_path %>