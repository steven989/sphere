<script>
var test;
$(function(){
    var modalInstance;
    var returnedData;

    $('#canvas').bubblify(<%= raw @raw_bubbles_data %>,<%= raw @bubbles_parameters %>,prettifyBubbles);

    function prettifyBubbles(canvas){
        canvas.find('.connectionBubble').each(function(){

            // 1) expiration progress bar
            $(this).parent('.connectBubbleContainer').circleProgress({
                value: 0.75,
                thickness:5,
                lineCap:'round',
                size: $(this).parent('.connectBubbleContainer').width(),
                fill: {color: '#ed1c24'},
                emptyFill: 'rgba(0,0,0,0)'
            });
            // 2) Notification icons
            var coordinates = getNotificationCoordinate(315,$(this).parent('.connectBubbleContainer').width()/2,14);
            $(this).parent('.connectBubbleContainer').append('<span class="badge badge-yellow" style="width:28px; height:28px; position:absolute;left:'+coordinates.x+'px;bottom:'+coordinates.y+'px;font-size:15px;padding-top:4px;">1d</span>');

            // 3) Set some attributes
            $(this).attr('href',"<%= populate_connection_modal_path %>?connection_id="+$(this).data('connection-id'))
            $(this).data('method','get')

            // 4) Dialog on clicking each bubble
            $(this).off("click").on("click",function(){
                var formData = new FormData();                
                var _this = $(this);

                $('[data-remodal-id=bubbleModal] .modalView').each(function(){
                    if ($(this).prop('id') != 'plans') {$(this).removeClass('hidden').addClass('hidden')}
                        else {$(this).removeClass('hidden')};
                });
                $('[data-remodal-id=bubbleModal]').data("connection-id",_this.data('connection-id'));
                $('.modalView#makePlan input[name=connection_id]').val(_this.data('connection-id'));
                $('.modalView#makePlan input[name=connection_email]').prop('placeholder',"Type "+_this.data("first-name")+"'s email");

                    modalInstance = $('[data-remodal-id=bubbleModal]').remodal({
                    closeOnConfirm:false,
                    modifier:'standardModal'
                    });
                $('.modalView#editConnection .modalBottomRightButton').off('click').on('click',function(){
                    formData.append("connection_id",_this.data('connection-id'));
                    formData.append("photo", $('.modalView#editConnection #photoUploader').prop("files")[0]);
                  $.ajax({
                    url: '<%= update_connection_path %>',
                    type: 'PUT',
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'JSON'
                  }).done(function(data){
                        if (data.status) {
                            $(".modalView#editConnection #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                            closeModalInstance(2000);
                        } else {
                            $(".modalView#editConnection #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                            
                        }
                      });
                })
                resetModal($('[data-remodal-id=bubbleModal]'),3);
                buttonAjax(_this,{});
                modalInstance.open();
            });
        });
    }

    // open modal instance
    function initializeReModal(element,modifier,resetType) {
        modalInstance = $(element).remodal({
        closeOnConfirm:false,
        modifier:modifier
        });
        resetModal($(element),resetType);
        modalInstance.open();        
    }

    // close modal instance 
    function closeModalInstance(timer) {
        setTimeout(function(){
            modalInstance.close();
        },timer);        
    }


    // Transitioning mechanism of different views within the bubble popup modal
    $('[data-remodal-id=bubbleModal] .transitionButton').off('click').on('click',function(){
        transition($($(this).data('current')),$($(this).data('target')));
    });

    // This function implements the transition so that it can be used by other things
    function transition(from,to) {
        from.addClass('hidden');
        to.removeClass('hidden');        
    }

    // Photo upload label within bubble modal to change display when a file is selected
    $(".modalView#editConnection #photoUploader").on("change",function(){
            $(".modalView#editConnection label[for=photoUploader]").html($(".modalView#editConnection #photoUploader").prop("files")[0].name);
    });

    // make plans
    function addListenerToPlanForm() {
        $('.modalView#makePlan .modalBottomRightButton').off('click').on('click',function(){
          var form = $('.modalView#makePlan form');
          modalAjaxFormSubmission(form);
        });        
    }


    // Modal resets
    function resetModal(modal,resetType) {

        if (resetType == 1 || resetType == 3) {
            // Reset css
            modal.parent().find('*').filter(function(){
                return $(this).data('default-css') != undefined;
            }).each(function(){
                var _this = $(this); 
                eval($(this).data('default-css')).forEach(function(cssReset){ 
                    _this.css(cssReset.attribute,cssReset.value);
                });
            });

            // Reset the fields that should be hidden by default
            modal.parent().find('.default_hidden').each(function(){
                $(this).removeClass('hidden').addClass('hidden');
            });
        }

        if (resetType == 2 || resetType == 3) { 
            // Reset values
            modal.parent().find('input').each(function(){
                if($(this).prop('type') != 'hidden' && $(this).prop('type') != 'checkbox' ) {
                    $(this).val('');    
                }
            })
        }
    }

    // General modal ajax submission function
    function modalAjaxFormSubmission(form) {
        test = form;
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: form.serialize(),
        dataType: 'JSON'
      }).done(function(data){
            resetModal(form.closest('.remodal'),1);
            if (data.status) {
                form.find('.alert').html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                    setTimeout(function(){
                        form.find('.alert').addClass('hidden');
                        resetModal(form.closest('.remodal'),2);
                        modalInstance.close();
                    },2000)
            } else {
                form.find('.alert').html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
            }

            if (data.actions != undefined && data.actions.length > 0) {
                performActions(data.actions);
            }
          });
    }


    // Add connections

    $('.modalView#mainImportView .modalBottomFullButton').off('click').on('click',function(){
      var form = $('.modalView#mainImportView form');
      modalAjaxFormSubmission(form);
    })    


    $('#addConnection').off('click').on('click',function(){
        initializeReModal('[data-remodal-id=importModal]','standardModal',3);
    });

    $('#navigation-tabs-container').easytabs({
        updateHash: false,
        tabs: "ul.etabs > li",
        animate: true,
        transitionIn: 'fadeIn',
        transitionOut: 'fadeOut',
        updateHash: true
    });


    function getNotificationCoordinate(angleInDegrees,attacheeRadiusInPixels,selfRadiusInPixels) {
        var x = Math.cos(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        var y = Math.sin(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        return {x:x,y:y};
    }

    // Importing contacts
    $('#importContactsGoogle').off("click").on("click",function(){
        buttonAjax($(this),$(this).data('data-to-send'));
    });

    // Account settings
    $('#accountSettings').off("click").on("click",function(){
        buttonAjax($(this),{});
    });

    $('.modalView#settingsSelect .modalBottomLeftButton').off("click").on("click",function(){
        closeModalInstance(0);
    });

    $('.modalView#settingsSelect .modalBottomRightButton').off("click").on("click",function(){
        var dataObject = {}
        $('.settingInput').each(function(){
            if ($(this).prop('type') == "checkbox") {
                dataObject[$(this).prop('name')] = $(this).prop('checked');
            } else if ($(this).prop('type') == 'select-one') {
                dataObject[$(this).prop('name')] = $(this).find('option:selected').val();
            } else {
                dataObject[$(this).prop('name')] = $(this).val();
            }
        })

        var dataToSend = {data:dataObject};
        buttonAjax($(this),dataToSend);
    });

    // Standard ajax call for buttons
    function buttonAjax(button,data) {
        event.preventDefault();
        event.stopPropagation();
        var alertElement = $(button.data('alert-element'));
          $.ajax({
            url: button.attr('href'),
            type: button.data('method'),
            data: eval(data),
            dataType: 'JSON'
          }).done(function(data){
                if (data.status) {
                        if(data.message != undefined && alertElement.length > 0 ) {
                            alertElement.html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");                            
                        }
                } else {
                    if(data.message != undefined && alertElement.length > 0) {
                        alertElement.html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                    }
                }
                if (data.data != undefined) {
                    returnedData = data.data;
                }
                if (data.actions != undefined && data.actions.length > 0) {
                    performActions(data.actions);    
                }
          })
    }

    // Specific callback functions for after modal population
    function populateBubblesModal() {
        // Main screen
        var name = returnedData.name;
        var lastHangout = returnedData.lastPlanString;
        var nextHangout = returnedData.upcomingPlanString;
        var photoUrl = returnedData.photo;
        $('[data-remodal-id=bubbleModal] .modalView#plans span.name').html(name);
        $('[data-remodal-id=bubbleModal] .modalView#plans span.lastHangout').html(lastHangout);
        $('[data-remodal-id=bubbleModal] .modalView#plans img.photo').attr('src',photoUrl);
        $('[data-remodal-id=bubbleModal] .modalView#plans span.nextHangout').html(nextHangout);
        if (returnedData.hasUpcomingPlan) {
            $('.modalView#makePlan input[name=date]').val(returnedData.planData.date);
            $('.modalView#makePlan input[name=time]').val(returnedData.planData.time);
            $('.modalView#makePlan input[name=duration]').val(returnedData.planData.length);
            $('.modalView#makePlan input[name=name]').val(returnedData.planData.name);
            $('.modalView#makePlan input[name=location]').val(returnedData.planData.location);
            $('.modalView#makePlan input[name=details]').val(returnedData.planData.details);
            $('.modalView#makePlan input[name=plan_id]').val(returnedData.planData.id);
            $('.modalView#makePlan div#deleteEvent').removeClass('hidden');
            $('.modalView#makePlan div#deleteEvent').off('click').on('click',function(){
                buttonAjax($(this),{plan_id:returnedData.planData.id,notify:$('.modalView#makePlan #notify').prop('checked')});
            });
            $('.modalView#makePlan form').attr('action',"<%= modify_plan_path %>").attr('method','PUT');
            $('.modalView#makePlan .modalBottomRightButton').html("UPDATE");
            $('.modalView#plans .modalBottomLeftButton').html("RESCHEDULE");
            
            addListenerToPlanForm();
        } else {
            $('.modalView#makePlan div#deleteEvent').removeClass('hidden').addClass('hidden');
            $('.modalView#makePlan form').attr('action',"<%= plans_path %>").attr('method','POST');
            addListenerToPlanForm();
            $('.modalView#makePlan .modalBottomRightButton').html("PUT IN CALENDAR");
            $('.modalView#plans .modalBottomLeftButton').html("MAKE PLANS");
        }
    }

    function populateSettingsForm () {

        var form = $('.modalView#settingsSelect #settingsContainer');
        form.find('#send_event_booking_notification_by_default_title').html(returnedData.send_event_booking_notification_by_default.title);
        form.find('#send_event_booking_notification_by_default_value').prop('checked',returnedData.send_event_booking_notification_by_default.value);
        form.find('#share_my_calendar_with_contacts_title').html(returnedData.share_my_calendar_with_contacts.title);
        form.find('#share_my_calendar_with_contacts_value').prop('checked',returnedData.share_my_calendar_with_contacts.value);
        form.find('#default_contact_interval_in_days_title').html(returnedData.default_contact_interval_in_days.title);
        form.find('#default_contact_interval_in_days_value').val(returnedData.default_contact_interval_in_days.value);
        form.find('#event_add_granularity_title').html(returnedData.event_add_granularity.title);
        form.find('#event_add_granularity_detailed_value').prop("selected", (returnedData.event_add_granularity.value == 'detailed'));
        form.find('#event_add_granularity_quick_value').prop("selected", (returnedData.event_add_granularity.value == 'quick'));

        initializeReModal("[data-remodal-id=settingsModal]","standardModal",1);
    }

    // Predefined set of actions can be called by passing an array of actions into this function. Useful for Rails to call specific follow up actions
    function performActions(actionsArray) {
        actionsArray.forEach(function(actionObject){
            if(actionObject.action=="popup_refresh_main_on_close") {
                var win = window.open(actionObject.url);
            var checkConnect = setInterval(function() {
                    if (!win || !win.closed) return;
                    clearInterval(checkConnect);
                    window.location.reload();
                }, 100);                        
            } else if (actionObject.action=="unhide") {
                $(actionObject.element).removeClass('hidden');
            } else if (actionObject.action == "change_css") {
                $(actionObject.element).css(actionObject.css.attribute,actionObject.css.value);
            } else if (actionObject.action == "transitionViews") {
                transition($(actionObject.from),$(actionObject.to));
            } else if (actionObject.action == "function_call") {
                eval(actionObject.function);
            }
        });
    }

    // This function takes the JSON list of contacts and populate it onto the popup
    function populateImportSelectionList(list) {
        $('.modalView#listSelect .importSelectionTable tbody').html("");
        var incrementer = 0;
        var contacts = list;
        returnedData,list = null; //this is to clear up the reference to the object to make it available for garbage collection after we're done
        contacts.forEach(function(contact){
            contact.incID = incrementer;
            $('.modalView#listSelect #importSelectionTable tbody').append('<tr data-inc-id='+incrementer+'><td class="import" ><input type="checkbox" data-inc-id='+incrementer+' data-id="'+contact.id+'" data-name="'+contact.name+'" data-email="'+contact.email+'" data-phone="'+contact.phone.join('|>-<+|%')+'" data-other-emails="'+contact.other_emails.join('|>-<+|%')+'" ></td><td class="name" >'+contact.name+'</td><td class="email">'+contact.email+'</td><td class="phone">'+contact.phone.join(', ')+'</td><td class="other_emails">'+contact.other_emails.join(', ')+'</td></tr>');
            incrementer++;
        });
        
        $('#importContacts .search').off("keyup").on("keyup",function(){
            var keyword = $(this).val().toLowerCase();
            var matchedItemsIDs = contacts.filter(function(c){ return ((c.name+" "+c.email+" "+c.phone.join(', ')+" "+c.other_emails.join(', ')).toLowerCase().indexOf(keyword) > -1 ) }).map(function(c){return c.incID });
            $('#importContacts table tbody tr').each(function(){
                if ( matchedItemsIDs.indexOf($(this).data('inc-id')) > -1 ) {
                    $(this).removeClass("hidden");
                } else {
                    $(this).removeClass("hidden").addClass('hidden');
                }
            });

        });
        $('.modalView#listSelect .modalBottomRightButton').off("click").on('click',function(){
            var contactListToSend = [];
            $('#importContacts table tbody tr td.import input[type=checkbox]').each(function(){
                if ($(this).prop('checked')) {
                    contactListToSend.push({id:$(this).data('id'),name:$(this).data('name'),email:$(this).data('email'),phone:$(this).data('phone'),other_emails:$(this).data('other-emails') })
                }
            });
            buttonAjax($(this),{contactsToImport:contactListToSend});
        });

        
    }

})
</script>
<div id="profile">
    <div id="logo">
        <%= image_tag "logo-white", width:"125" %>
    </div>
    
        <div id="addConnection">
            <%= fa_icon 'user-plus' %>
        </div>
        <div id="accountSettings" href="<%= get_user_settings_path(current_user) %>" data-method="GET">
            <%= fa_icon 'cog' %>
        </div>
        <div id="logout">
            <a href="<%= logout_path %>"><%= fa_icon 'sign-out' %></a>
        </div>    
    

</div>

<div id="navigation-tabs-container">
    <div class="topTabs-header clearfix">
        <ul class="etabs tabs" id="navigation">
            <li class="tab"><a href="#mySphere"><%= fa_icon 'circle-o' %><br>MY SPHERE</a></li>
            <li class="tab"><a href="#challenges"><%= fa_icon 'map' %><br>CHALLENGES</a></li>
            <li class="tab"><a href="#progress"><%= fa_icon 'bar-chart' %><br>PROGRESS</a></li>
            <li class="tab"><a href="#achievements"><%= fa_icon 'star' %><br>ACHIEVEMENTS</a></li>
        </ul>        
    </div> 
    <div class="topTabsContent">
        <div id="mySphere">

            <div id="canvas" style="position: relative; margin: auto;"></div>            

        </div>
        <div id="challenges">
            <div class="title">
                <h1 class="textDarkGray">Your challenges for the week</h1>
            </div>
            <div class="container">
                <div class="row">
                    <% @challenges.each  do |challenge| %>
                        <div class="cardColumn col-lg-4 col-md-4 col-sm-6 col-sm-6 col-xs-12">
                            <div class="card challengeCard">
                                <div class="title">
                                    <h2 class="textDarkGray"><%= challenge.name %></h2>
                                </div>
                                <div class="graphic">
                                    <%= challenge.graphic.blank? ? "" : challenge.graphic %>
                                </div>
                                <div class="subtitle">
                                   <p class="textDarkGray"><%= challenge.instructions %></p>
                                </div>
                                <div class="buttons">
                                    <div class="sphereGreenBackground modalBottomLeftButton">
                                        Start
                                    </div>
                                    <div class="sphereBlueBackground modalBottomRightButton">
                                        Learn
                                    </div>
                                </div>
                            </div> 
                        </div>
                    <% end %>                    
                </div>
            </div>
        </div>
        <div id="progress">
            <div class="title">
                <h1 class="textDarkGray">How you're doing so far</h1>
            </div>
            <div id="levelDisplay">
                <div class="content">
                    <div class="graphic">
                        <%= @level_object.graphic.blank? ? "" : @level_object.graphic %>
                    </div>
                    <div class="details">
                        <div class="level">
                            <h2 class="textDarkGray">Level <%= @level_num %></h2>
                        </div>
                        <div class="progress progressBar">
                            <div class="progress-bar bar-green" style="width:<%= @level_progress_percent_string %>"></div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="details">
                
            </div>
        </div>
        <div id="achievements">
            <div class="title">
                <h1 class="textDarkGray">Achievements</h1>
            </div>
            <div class="container">
                <div class="row">
                    <% @badges.each  do |badge| %>
                        <div class="cardColumn col-lg-4 col-md-4 col-sm-6 col-sm-6 col-xs-12">
                            <div class="card badgeCard">
                                <div class="title">
                                    <h2 class="textDarkGray"><%= badge.name %></h2>
                                </div>
                                <div class="graphic">
                                    <%= badge.graphic.blank? ? "" : badge.graphic %>
                                </div>
                                <div class="subtitle">
                                   <p class="textDarkGray"><%= badge.description %></p>
                                </div>
                            </div> 
                        </div>
                    <% end %>                    
                </div>
            </div>            
        </div>
    </div>
</div>

<div data-remodal-id="bubbleModal" data-default-css="([{'attribute':'height','value':'400px'}])">
    <div class="modalView" id="plans">
        <div class="modalContentContainer">
            <div style="color:#656268; font-size:20px;"><span class="name"></span></div>
            <div style="color:#656268; margin-top: 15px; font-size:15px;font-weight:lighter"><span class="lastHangout"></span></div>
            <div style="height:140px;margin-top:35px;"><img class="photo transitionButton" src="" alt="No photo available" data-current="[data-remodal-id=bubbleModal] .modalView#plans" data-target="[data-remodal-id=bubbleModal] .modalView#editConnection" style="cursor:pointer; width:120px;height:120px;border-radius:50%;"> </div>
            <div style="margin-top:22px;font-size:15px;color:#656268"><span class="nextHangout"></span></div>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereBlueBackground" data-current="[data-remodal-id=bubbleModal] .modalView#plans" data-target="[data-remodal-id=bubbleModal] .modalView#makePlan">MAKE PLANS</div>
            <div class="modalBottomRightButton sphereGreenBackground">CHECK IN</div>
        </div>
    </div>
    <div class="modalView hidden" id="makePlan">
        <div class="modalContentContainer">
            <form action="<%= plans_path %>" method="POST" >
                <input type="date" class="input-text" name="date" placeholder="Which day" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" />
                <input type="text" class="input-text" name="time" placeholder="What time (e.g. 12:30pm)" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" required />
                <input type="number" class="input-text" name="duration" placeholder="For how many hours (e.g. 0.5)" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" required />
                <input type="text" class="input-text" name="name" placeholder="Meeting/activity name" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" required />
                <input type="text" class="input-text" name="location" placeholder="Location (optional)" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" />
                <input type="text" class="input-text" name="details" placeholder="Details (optional)" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" />
                <div style="display:inline-box; width:50px; height:20px; border-radius:5px; background-color:yellow" class="hidden" href="<%= cancel_plan_path %>" data-method="PUT" id="deleteEvent" data-alert-element=".modalView#makePlan #makePlanFormAlert">Cancel</div>
                <input type="hidden" name="connection_id">
                <input type="hidden" name="plan_id">
                <%= check_box_tag 'notify',true,@settings[:send_event_booking_notification_by_default], style:"display:inline-box;" %>
                <label for="notify">Send invite?</label>
                <input type="text" class="input-text hidden default_hidden" name="connection_email" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" >
                <div class="alert hidden default_hidden" id="makePlanFormAlert" style="margin-top:1px;line-height:15px;"></div>
            </form>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereRedBackground" data-current="[data-remodal-id=bubbleModal] .modalView#makePlan" data-target="[data-remodal-id=bubbleModal] .modalView#plans">BACK</div>
            <div class="modalBottomRightButton sphereBlueBackground">PUT IN CALENDAR</div>
        </div>
    </div>
    <div class="modalView hidden" id="editConnection">
        <div class="modalContentContainer">
            <form id="connectionInfo">
                <input name="photoUploader" id="photoUploader" type="file" accept="image/*">
                <label for="photoUploader">
                    Choose a display picture
                </label>
                <div class="alert hidden default_hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>
            </form>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton transitionButton sphereRedBackground" data-current="[data-remodal-id=bubbleModal] .modalView#editConnection" data-target="[data-remodal-id=bubbleModal] .modalView#plans">Back</div>
            <div class="modalBottomRightButton sphereBlueBackground">Update</div>
        </div>
    </div>
</div>


<div data-remodal-id="importModal" data-default-css="([{'attribute':'height','value':'400px'}])">
    <div class="modalView" id="mainImportView">
        <div class="modalContentContainer">
            <div class="addConnectionPopupContent" >
                <button class="btn" href="<%= import_connection_path %>" data-method="put" data-data-to-send="({'provider':'google'})" data-alert-element="[data-remodal-id=importModal] .alert" id="importContactsGoogle" style="width:100%; margin-bottom:5px; background-color:#3b5998; color:white;">Import from Google</button>
                <br>
                <button class="btn btn-blue" style="width:100%; margin-bottom:10px; background-color:#0077b5; color:white;">Import from Outlook</button>
                <h2 style="width:100%;text-align:center;border-bottom:1px solid #E0E0E0;line-height:0.34em;margin:10px 0 20px;"><span style="font-size:13px;color:#787878;background-color:#f0f0f0;padding:0 19px;font-weight:bold;">Or enter manually</span></h2>
                <form action="<%= create_connection_path %>" method="POST">
                    <div class="vex-custom-field-wrapper">
                        <div class="vex-custom-input-wrapper">
                            <input name="name" type="text" placeholder="Name" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" required>
                        </div>
                        <div class="vex-custom-input-wrapper">
                            <input name="email" type="text" placeholder="Email" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])">
                        </div>
                        <div class="vex-custom-input-wrapper">
                            <input name="phone" type="text" placeholder="Phone" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])">
                        </div>
                        <div class="vex-custom-input-wrapper">
                            <input name="target_contact_interval_in_days" type="number" placeholder="How often to reach out? (days)" data-default-css="([{'attribute':'border','value':'1px solid rgba(0,0,0,0.1)'}])" required>
                        </div>
                    </div>
                    <div class="alert hidden default_hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>
                </form>
            </div>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomFullButton sphereBlueBackground">Add to Sphere</div>
        </div>
    </div>
    <div class="modalView" id="listSelect">
        <div class="modalContentContainer">
            <div id="importContacts">
                <div class="alert hidden default_hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;position:absolute;top:0px;left:0px;"></div>
                <input type="text" class="search" placeholder="Search">
                <button class="btn sort" data-sort="name">Sort by Name</button>
                <table id="importSelectionTable">
                    <thead>
                        <th>Import?</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone Numbers</th>
                        <th>Other Emails</th>
                    </thead>
                    <tbody class="list">
                    </tbody>
                </table>
            </div>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton sphereRedBackground">BACK</div>
            <div class="modalBottomRightButton sphereBlueBackground" href="<%= create_from_import_path %>" data-method="POST">ADD TO SPHERE</div>
        </div>
    </div>
</div>

<div data-remodal-id="settingsModal" data-default-css="([{'attribute':'height','value':'400px'}])">
    <div class="modalView" id="settingsSelect">
        <div class="modalContentContainer">
            <div id="settingsContainer">
                <div >
                    <div id="send_event_booking_notification_by_default_title"></div>
                    <div><input type='checkbox' class="settingInput" name='send_event_booking_notification_by_default' id='send_event_booking_notification_by_default_value' value=''></div>
                </div>
                <div>
                    <div id="share_my_calendar_with_contacts_title"></div>
                    <div><input type='checkbox' class="settingInput" name='share_my_calendar_with_contacts' id='share_my_calendar_with_contacts_value' value=''></div>
                </div>
                <div>
                    <div id="default_contact_interval_in_days_title"></div>
                    <div><input type='number' class="settingInput" name='default_contact_interval_in_days' id='default_contact_interval_in_days_value'></div>
                </div>
                <div>
                    <div id="event_add_granularity_title"></div>
                    <div>
                        <select class="settingInput" name='event_add_granularity'>
                            <option value='detailed' id="event_add_granularity_detailed_value">Detailed</option>
                            <option value='quick' id="event_add_granularity_quick_value" >Quick</option>
                        </select>
                    </div>
                </div>                
            </div>
            <div class="alert hidden default_hidden"></div>
        </div>
        <div class="modalButtonContainer">
            <div class="modalBottomLeftButton sphereRedBackground">Cancel</div>
            <div class="modalBottomRightButton sphereBlueBackground" href="<%= update_user_settings_path(current_user) %>" data-method="PUT" data-alert-element=".modalView#settingsSelect .alert">Update</div>
        </div>
    </div>
</div>


<%= link_to 'Logout', logout_path %>