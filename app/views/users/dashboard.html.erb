<script>
$(function(){
    $('#canvas').bubblify(<%= raw @raw_bubbles_data %>,<%= raw @bubbles_parameters %>,prettifyBubbles);

    function prettifyBubbles(canvas){
        canvas.find('.connectionBubble').each(function(){

            // 1) expiration progress bar
            $(this).parent('.connectBubbleContainer').circleProgress({
                value: 0.75,
                thickness:5,
                lineCap:'round',
                size: $(this).parent('.connectBubbleContainer').width(),
                fill: {color: '#ed1c24'},
                emptyFill: 'rgba(0,0,0,0)'
            });
            // 2) Notification icons
            var coordinates = getNotificationCoordinate(315,$(this).parent('.connectBubbleContainer').width()/2,14);
            $(this).parent('.connectBubbleContainer').append('<span class="badge badge-yellow" style="width:28px; height:28px; position:absolute;left:'+coordinates.x+'px;bottom:'+coordinates.y+'px;font-size:15px;padding-top:4px;">1d</span>');

            // 3) Dialog on clicking each bubble
            var formData = new FormData();
            $(this).off("click").on("click",function(){
                var _this = $(this);
                vex.dialog.open({
                    input:[
                        '<div class="editConnectionPopupContent">',
                            '<input name="photoUploader" id="photoUploader" type="file" accept="image/*">',
                            '<label for="photoUploader">',
                            'Choose a display picture',
                            '</label>',
                            '<div class="alert hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>',
                        '</div>'
                    ].join(''),
                    buttons:[
                        $.extend({}, vex.dialog.buttons.YES, { text: 'Update' }),
                        $.extend({}, vex.dialog.buttons.NO, { text: 'Cancel' })
                    ],
                    afterOpen: function(){
                                $(".editConnectionPopupContent #photoUploader").on("change",function(){
                                        $(".editConnectionPopupContent label[for=photoUploader]").html($(".editConnectionPopupContent #photoUploader").prop("files")[0].name);
                                });
                            },
                    onSubmit: function(data){
                        formData.append("connection_id",_this.data('connection-id'));
                        formData.append("photo", $('.editConnectionPopupContent #photoUploader').prop("files")[0]);
                        event.preventDefault();
                        event.stopPropagation();
                      $.ajax({
                        url: '<%= update_connection_path %>',
                        type: 'PUT',
                        processData: false,
                        contentType: false,
                        data: formData,
                        dataType: 'JSON'
                      }).done(function(data){
                            if (data.status) {
                                $(".editConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                                setTimeout(function(){
                                    vex.closeAll();
                                },2000)
                            } else {
                                $(".editConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                                
                            }
                          })
                    }
                });
            });
        });
    }

    $('#addConnection').off('click').on('click',function(){
         vex.dialog.open({
            input: [
            '<div class="addConnectionPopupContent">',
                '<button class="btn" style="width:100%; margin-bottom:5px; background-color:#3b5998; color:white;">Import from Facebook</button>',
                '<br>',
                '<button class="btn btn-blue" style="width:100%; margin-bottom:10px; background-color:#0077b5; color:white;">Import from LinkedIn</button>',
                '<h2 style="width:100%;text-align:center;border-bottom:1px solid #E0E0E0;line-height:0.34em;margin:10px 0 20px;"><span style="font-size:13px;color:#787878;background-color:#f0f0f0;padding:0 19px;font-weight:bold;">Or enter manually</span></h2>',
                '<div class="vex-custom-field-wrapper">',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="name" type="text" placeholder="Name" required>',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="email" type="text" placeholder="Email">',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="phone" type="text" placeholder="Phone">',
                    '</div>',
                    '<div class="vex-custom-input-wrapper">',
                        '<input name="target_contact_interval_in_days" type="number" placeholder="How often to reach out? (days)" required>',
                    '</div>',
                '</div>',
                '<div class="alert hidden" id="connectionFormAlert" style="margin-top:1px;line-height:10px;"></div>',
            '</div>'
            ].join(''),
            buttons: [
                $.extend({}, vex.dialog.buttons.YES, { text: 'Add' }),
                $.extend({}, vex.dialog.buttons.NO, { text: 'Cancel' })
            ],            
            onSubmit: function(data){
                event.preventDefault();
                event.stopPropagation();
              $.ajax({
                url: '<%= create_connection_path %>',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({name:$('.addConnectionPopupContent input[name="name"]')[0].value,email:$('.addConnectionPopupContent input[name="email"]')[0].value,phone:$('.addConnectionPopupContent input[name="phone"]')[0].value,target_contact_interval_in_days:$('.addConnectionPopupContent input[name="target_contact_interval_in_days"]')[0].value}),
                dataType: 'JSON'
              }).done(function(data){
                if (data.status) {
                    $(".addConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-success").removeClass("hidden");
                    setTimeout(function(){
                        $(".addConnectionPopupContent #connectionFormAlert").addClass('hidden');
                        $('.addConnectionPopupContent input[name="name"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="phone"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="email"]')[0].value = "";
                        $('.addConnectionPopupContent input[name="target_contact_interval_in_days"]')[0].value = "";
                    },2000)
                } else {
                    $(".addConnectionPopupContent #connectionFormAlert").html(data.message).removeClass("alert-danger").removeClass("alert-success").addClass("alert-danger").removeClass("hidden");
                    
                }
              })
            }
        });
    })

    $('#navigation-tabs-container').easytabs({
        updateHash: false,
        tabs: "ul.etabs > li",
        animate: true,
        transitionIn: 'fadeIn',
        transitionOut: 'fadeOut',
        updateHash: true
    });


    function getNotificationCoordinate(angleInDegrees,attacheeRadiusInPixels,selfRadiusInPixels) {
        var x = Math.cos(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        var y = Math.sin(angleInDegrees*(Math.PI/180))*attacheeRadiusInPixels + attacheeRadiusInPixels - selfRadiusInPixels;
        return {x:x,y:y};
    }

})
</script>
<div id="profile">
    <div id="logo">
        Sphere Beta
    </div>
    <div id="addConnection">
        Add
    </div>
    <div id="accountSettings">
        Settings
    </div>
</div>

<div id="navigation-tabs-container">
    <div class="topTabs-header clearfix">
        <ul class="etabs tabs" id="navigation">
            <li class="tab"><a href="#mySphere">MY SPHERE</a></li>
            <li class="tab"><a href="#challenges">CHALLENGES</a></li>
            <li class="tab"><a href="#progress">PROGRESS</a></li>
            <li class="tab"><a href="#achievements">ACHIEVEMENTS</a></li>
        </ul>        
    </div> 
    <div class="topTabsContent">
        <div id="mySphere">

            <div id="canvas" style="position: relative; margin: auto;"></div>            
            
        </div>
        <div id="challenges"></div>
        <div id="progress"></div>
        <div id="achievements"></div>
    </div>
</div>



<%= link_to 'Logout', logout_path %>