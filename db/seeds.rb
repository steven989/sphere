StatisticDefinition.create!([
  {name: "current_sphere_size", description: "This is a month-level statistic to show the number of people in a user's sphere. Prior months records are as of the last dates of those months", definition: "number_in_sphere=ActiveRecord::Base.connection.execute(\"Select count(*) From connections Where user_id = \#{current_user.id} and active=true\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"current_sphere_size\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"current_sphere_size\",value:number_in_sphere,year:year,month:month) : statistic.take.update_attributes(value:number_in_sphere)", operation_type: "individual", operation_trigger: "nightly,connection_revive,create_connection", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"},
  {name: "connections_added", description: "This is the monthly statistic that shows how many connections the user has added in total that month. Prior month values are as of the last date of the month. Expired connections are also counted in here", definition: "connections_added=ActiveRecord::Base.connection.execute(\"Select count(*) From connections Where user_id = \#{current_user.id} and created_at >= '2017-01-01'\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"connections_added\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"connections_added\",value:connections_added,year:year,month:month) : statistic.take.update_attributes(value:connections_added)", operation_type: "individual", operation_trigger: "nightly,create_connection", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"},
  {name: "expired_connections_count", description: "This statistic shows the current number of expired connections the user has. Note that when a contact is revived, this statistic will decrease. Prior month values are as of the last date of the month", definition: "number_of_connections_expired=ActiveRecord::Base.connection.execute(\"Select count(*) From connections Where user_id = \#{current_user.id} and active=false\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"expired_connections_count\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"expired_connections_count\",value:number_of_connections_expired,year:year,month:month) : statistic.take.update_attributes(value:number_of_connections_expired)", operation_type: "individual", operation_trigger: "nightly,connection_revive", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"},
  {name: "challenges_completed", description: "The total number of challenges completed by the user in this month. Prior month values are as of the last date of the month", definition: "challenges_completed=ActiveRecord::Base.connection.execute(\"Select count(*) From user_challenge_completeds Where user_id = \#{current_user.id} and method_of_completion ilike 'completed' and created_at >= '2017-01-01'\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"challenges_completed\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"challenges_completed\",value:challenges_completed,year:year,month:month) : statistic.take.update_attributes(value:challenges_completed)", operation_type: "individual", operation_trigger: "nightly,complete_challenge", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"},
  {name: "events_booked", description: "The total number of events booked this month by the user, including all cancelled ones. Prior month values are as of the last day of the month", definition: "events_booked=ActiveRecord::Base.connection.execute(\"Select count(*) From plans Where user_id = \#{current_user.id} and created_at >= '2017-01-01'\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"events_booked\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"events_booked\",value:events_booked,year:year,month:month) : statistic.take.update_attributes(value:events_booked)", operation_type: "individual", operation_trigger: "nightly,create_plan", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"},
  {name: "number_of_checkins", description: "Total number of checkins this month from the user", definition: "number_of_checkins=ActiveRecord::Base.connection.execute(\"Select count(*) From activities Where user_id = \#{current_user.id} and activity ilike 'Check In' and created_at >= '2017-01-01'\").values[0][0].to_i;year=Date.today.year;month=Date.today.month;statistic=current_user.user_statistics.where(name:\"number_of_checkins\",year:year,month:month);statistic.blank? ? current_user.user_statistics.create(statistic_definition_id:statistic_definition_id,name:\"number_of_checkins\",value:number_of_checkins,year:year,month:month) : statistic.take.update_attributes(value:number_of_checkins)", operation_type: "individual", operation_trigger: "create_activity,nightly", priority: 1, start_value_type: "float", start_value: "0", timeframe: "monthly"}
])
